import { ChevronRight, Home } from 'lucide-react';
import { Link, useLocation } from 'react-router-dom';
import { cn } from '@/lib/utils';

interface BreadcrumbItem {
  label: string;
  href?: string;
  isActive?: boolean;
}

interface EnhancedBreadcrumbProps {
  items?: BreadcrumbItem[];
  className?: string;
}

export function EnhancedBreadcrumb({ items, className }: EnhancedBreadcrumbProps) {
  const location = useLocation();

  // Auto-generate breadcrumbs if not provided
  const getAutoGeneratedItems = (): BreadcrumbItem[] => {
    const path = location.pathname;
    const segments = path.split('/').filter(Boolean);
    
    const breadcrumbs: BreadcrumbItem[] = [
      { label: 'Home', href: '/' }
    ];

    // Build breadcrumbs based on path segments
    let currentPath = '';
    segments.forEach((segment, index) => {
      currentPath += `/${segment}`;
      const isLast = index === segments.length - 1;
      
      // Convert segment to readable label
      let label = segment
        .split('-')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');

      // Special cases for better labels
      if (segment === 'tournaments') label = 'Tournaments';
      if (segment === 'clubs') label = 'Club';
      if (segment === 'profile') label = 'Profile';
      if (segment === 'manage') label = 'Management';
      if (segment === 'leaderboard') label = 'Leaderboard';
      if (segment === 'catches') label = 'My Catches';
      if (segment === 'plans') label = 'Plans';
      if (segment === 'gear') label = 'Gear';
      if (segment === 'messages') label = 'Messages';
      if (segment.includes('demo-')) {
        label = 'Alabama Bass Nation - Chapter 12';
      }

      breadcrumbs.push({
        label,
        href: isLast ? undefined : currentPath,
        isActive: isLast
      });
    });

    return breadcrumbs;
  };

  const breadcrumbItems = items || getAutoGeneratedItems();

  // Don't show breadcrumbs for home page or single-level pages
  if (breadcrumbItems.length <= 1 && !items) {
    return null;
  }

  return (
    <nav 
      className={cn("flex items-center space-x-1 text-sm text-muted-foreground", className)}
      aria-label="Breadcrumb navigation"
    >
      {breadcrumbItems.map((item, index) => (
        <div key={index} className="flex items-center">
          {index > 0 && (
            <ChevronRight className="w-4 h-4 mx-1 flex-shrink-0" />
          )}
          
          {item.href ? (
            <Link
              to={item.href}
              className="hover:text-foreground transition-colors truncate flex items-center"
            >
              {index === 0 && <Home className="w-4 h-4 mr-1" />}
              {item.label}
            </Link>
          ) : (
            <span className={cn(
              "truncate flex items-center",
              item.isActive && "text-foreground font-medium"
            )}>
              {index === 0 && <Home className="w-4 h-4 mr-1" />}
              {item.label}
            </span>
          )}
        </div>
      ))}
    </nav>
  );
}